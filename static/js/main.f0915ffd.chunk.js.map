{"version":3,"sources":["AppBar.tsx","Button.tsx","Form.tsx","Info.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["styles","makeStyles","theme","title","fontSize","header","padding","left","flex","leftLinkActive","color","palette","common","white","AppAppBar","classes","elevation","position","className","Typography","variant","withStyles","root","borderRadius","fontWeight","typography","fontWeightMedium","spacing","pxToRem","boxShadow","sizeSmall","sizeLarge","Button","input","width","marginBottom","Form","useState","secretWord","setSecretWord","history","useHistory","Box","align","mb","display","flexDirection","alignItems","TextField","label","value","onChange","target","disabled","onClick","push","qrImageSample","StyledImage","styled","img","isLoading","Info","keyPair","setKeyPair","privateKey","setPrivateKey","legacyAddress","setLegacyAddress","segwitAddress","setSegwitAddress","visible","status","snackbarOptions","setSnackbarOptions","location","useLocation","state","replace","useEffect","bitcoin","makeRandom","a","decoded","wif","decode","toWIF","encryptedKey","bip38","encrypt","compressed","QRCode","toDataURL","key","qr","P2PKHAddress","p2pkh","pubkey","publicKey","P2WPKHAddress","p2wpkh","address","generateWalletInfo","fallbackCopyTextToClipboard","text","textArea","document","createElement","style","top","body","appendChild","focus","select","removeChild","copyTextToClipboard","navigator","clipboard","writeText","handleCopyQrKey","e","currentTarget","dataset","pt","justifyContent","src","data-key","Snackbar","open","autoHideDuration","onClose","severity","Container","App","exact","path","from","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","getElementById"],"mappings":"iaAKMA,EAASC,aAAW,SAACC,GAAD,MAAiB,CACzCC,MAAO,CACLC,SAAU,IAEZC,OAAQ,CACNC,QAAS,aAEXC,KAAM,CACJC,KAAM,GAERC,eAAgB,CACdC,MAAOR,EAAMS,QAAQC,OAAOC,WAgBjBC,EAZG,WAChB,IAAMC,EAAUf,IAEhB,OACE,cAAC,IAAD,CAAWgB,UAAW,EAAGC,SAAS,SAASC,UAAWH,EAAQV,OAA9D,SACE,cAACc,EAAA,EAAD,CAAYC,QAAQ,KAAKV,MAAM,UAAUQ,UAAWH,EAAQZ,MAA5D,wC,mDCtBSkB,eAAW,SAACnB,GAAD,MAAY,CACpCoB,KAAM,CACJC,aAAc,EACdC,WAAYtB,EAAMuB,WAAWC,iBAC7BpB,QAASJ,EAAMyB,QAAQ,EAAG,GAC1BvB,SAAUF,EAAMuB,WAAWG,QAAQ,IACnCC,UAAW,OACX,oBAAqB,CACnBA,UAAW,SAGfC,UAAW,CACTxB,QAASJ,EAAMyB,QAAQ,EAAG,GAC1BvB,SAAUF,EAAMuB,WAAWG,QAAQ,KAErCG,UAAW,CACTzB,QAASJ,EAAMyB,QAAQ,EAAG,GAC1BvB,SAAUF,EAAMuB,WAAWG,QAAQ,QAjBxBP,CAmBXW,KCjBEhC,EAASC,aAAW,iBAAO,CAC/BgC,MAAO,CACLC,MAAO,MACPC,aAAc,YA4CHC,EAtCF,WACX,IAAMrB,EAAUf,IADC,EAGmBqC,mBAAS,IAH5B,mBAGVC,EAHU,KAGEC,EAHF,KAKXC,EAAUC,cAChB,OACE,eAACC,EAAA,EAAD,WACE,cAACvB,EAAA,EAAD,CAAYwB,MAAM,SAASvB,QAAQ,KAAnC,+BAGA,cAACsB,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,eAACzB,EAAA,EAAD,CAAYwB,MAAM,SAASvB,QAAQ,KAAnC,qCAC2B,SAG7B,eAACsB,EAAA,EAAD,CAAKE,GAAI,EAAGC,QAAQ,OAAOC,cAAc,SAASC,WAAW,SAA7D,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,SACN7B,QAAQ,WACR8B,MAAOZ,EACPpB,UAAWH,EAAQkB,MACnBkB,SAAU,gBAAaD,EAAb,EAAGE,OAAUF,MAAb,OAA2BX,EAAcW,MAGrD,cAAC,EAAD,CACE9B,QAAQ,YACRV,MAAM,UACN2C,UAAWf,EACXgB,QAAS,kBAAMd,EAAQe,KAAK,UAAW,CAAEjB,gBAJ3C,sC,mQCPR,IAAMkB,EAAgB,oEAgKhBC,EAAcC,IAAOC,IAAV,KAIA,qBAAGC,UAA6B,GAAM,KAGxCC,EArKuB,WAAO,IAAD,EACZxB,mBAAyC,MAD7B,mBACnCyB,EADmC,KAC1BC,EAD0B,OAEN1B,mBAAsB,MAFhB,mBAEnC2B,EAFmC,KAEvBC,EAFuB,OAGA5B,mBAA0B,MAH1B,mBAGnC6B,EAHmC,KAGpBC,EAHoB,OAIA9B,mBAA0B,MAJ1B,mBAInC+B,EAJmC,KAIpBC,EAJoB,OAKIhC,mBAA2B,CAAEiC,SAAS,EAAOC,OAAQ,YALzD,mBAKnCC,EALmC,KAKlBC,EALkB,KAOpCC,EAAWC,cACXnC,EAAUC,cAEVH,EAAaoC,EAASE,MAAMtC,WAElC,IAAKA,EAEH,OADAE,EAAQqC,QAAQ,SACT,KAGTC,qBAAU,WACRf,EAAWgB,SAAeC,gBACzB,IAEHF,qBAAU,WACHhB,GAEmB,uCAAG,kCAAAmB,EAAA,6DACnBC,EAAUC,IAAIC,OAAOtB,EAAQuB,SAC7BC,EAAeC,IAAMC,QAAQN,EAAQlB,WAAYkB,EAAQO,WAAYnD,GAFlD,KAIzB2B,EAJyB,KAKlBqB,EALkB,SAMbI,IAAOC,UAAU7B,EAAQuB,SANZ,gCAKvBO,IALuB,KAMvBC,GANuB,qBASnBC,EAAoBf,WAAiBgB,MAAM,CAC/CC,OAAQlC,EAAQmC,YAEZC,EAAqBnB,WAAiBoB,OAAO,CACjDH,OAAQlC,EAAQmC,YAbO,KAgBzB9B,EAhByB,KAiBd2B,EAAaM,QAjBC,UAkBbV,IAAOC,UAAUG,EAAaM,SAlBjB,iCAiBvBA,QAjBuB,KAkBvBP,GAlBuB,0BAqBzBxB,EArByB,KAsBd6B,EAAcE,QAtBA,UAuBbV,IAAOC,UAAUO,EAAcE,SAvBlB,4BAsBvBA,QAtBuB,KAuBvBP,GAvBuB,mEAAH,oDA2BxBQ,KACC,CAACvC,IAEJ,IAAMwC,EAA8B,SAACC,GACnC,IAAMC,EAAWC,SAASC,cAAc,YACxCF,EAAStD,MAAQqD,EAGjBC,EAASG,MAAMC,IAAM,IACrBJ,EAASG,MAAMpG,KAAO,IACtBiG,EAASG,MAAM1F,SAAW,QAE1BwF,SAASI,KAAKC,YAAYN,GAC1BA,EAASO,QACTP,EAASQ,SAETP,SAASI,KAAKI,YAAYT,IAGtBU,EAAmB,uCAAG,WAAOX,GAAP,SAAAtB,EAAA,yDACrBkC,UAAUC,UADW,uBAExBd,EAA4BC,GAFJ,mDAOlBY,UAAUC,UAAUC,UAAUd,GAPZ,OAQxB9B,EAAmB,CAAEH,SAAS,EAAMC,OAAQ,YARpB,gDAUxBE,EAAmB,CAAEH,SAAS,EAAMC,OAAQ,UAVpB,yDAAH,sDAcnB+C,EAAkB,SAACC,GACvB,IAAM3B,EAA0B2B,EAAEC,cAAcC,QAAQ7B,IACnDA,GACLsB,EAAoBtB,IAGtB,OACE,eAAClD,EAAA,EAAD,CAAKzB,SAAS,WAAd,UACE,cAACE,EAAA,EAAD,CAAYwB,MAAM,SAASvB,QAAQ,KAAnC,iEAGA,eAACsB,EAAA,EAAD,CAAKgF,GAAI,EAAG7E,QAAQ,OAAOE,WAAW,SAAS4E,eAAe,gBAA9D,UACE,eAACjF,EAAA,EAAD,CAAKG,QAAQ,OAAOE,WAAW,SAASD,cAAc,SAAtD,UACE,cAAC3B,EAAA,EAAD,wCACA,cAACsC,EAAD,CAAaG,YAAW,OAACI,QAAD,IAACA,OAAD,EAACA,EAAY6B,IAAI+B,KAAe,OAAV5D,QAAU,IAAVA,OAAA,EAAAA,EAAY6B,IAAK7B,EAAW6B,GAAKrC,IAC/E,cAAC,EAAD,CACEpC,QAAQ,YACRV,MAAM,UACNmH,WAAA,OAAU7D,QAAV,IAAUA,OAAV,EAAUA,EAAY4B,IACtBvC,WAAU,OAACW,QAAD,IAACA,OAAD,EAACA,EAAY6B,IACvBvC,QAASgE,EALX,qBAUF,eAAC5E,EAAA,EAAD,CAAKG,QAAQ,OAAOE,WAAW,SAASD,cAAc,SAAtD,UACE,cAAC3B,EAAA,EAAD,uCACA,cAACsC,EAAD,CAAaG,YAAW,OAACM,QAAD,IAACA,OAAD,EAACA,EAAe2B,IAAI+B,KAAkB,OAAb1D,QAAa,IAAbA,OAAA,EAAAA,EAAe2B,IAAK3B,EAAc2B,GAAKrC,IACxF,cAAC,EAAD,CACEpC,QAAQ,YACRV,MAAM,UACNmH,WAAA,OAAU3D,QAAV,IAAUA,OAAV,EAAUA,EAAekC,QACzB/C,WAAU,OAACW,QAAD,IAACA,OAAD,EAACA,EAAY6B,IACvBvC,QAASgE,EALX,qBAUF,eAAC5E,EAAA,EAAD,CAAKG,QAAQ,OAAOE,WAAW,SAASD,cAAc,SAAtD,UACE,cAAC3B,EAAA,EAAD,mCACA,cAACsC,EAAD,CAAaG,YAAW,OAACQ,QAAD,IAACA,OAAD,EAACA,EAAeyB,IAAI+B,KAAkB,OAAbxD,QAAa,IAAbA,OAAA,EAAAA,EAAeyB,IAAKzB,EAAcyB,GAAKrC,IACxF,cAAC,EAAD,CACEpC,QAAQ,YACRV,MAAM,UACNmH,WAAA,OAAUzD,QAAV,IAAUA,OAAV,EAAUA,EAAegC,QACzB/C,WAAU,OAACW,QAAD,IAACA,OAAD,EAACA,EAAY6B,IACvBvC,QAASgE,EALX,wBAWJ,cAACQ,EAAA,EAAD,CACEC,KAAMvD,EAAgBF,QACtB0D,iBAAkB,IAClBC,QAAS,kBAAMxD,EAAmB,CAAEH,SAAS,EAAOC,OAAQC,EAAgBD,UAH9E,SAKE,cAAC,IAAD,CACEvD,UAAW,EACXI,QAAQ,SACR6G,QAAS,kBAAMxD,EAAmB,CAAEH,SAAS,EAAOC,OAAQC,EAAgBD,UAC5E2D,SAAU1D,EAAgBD,OAJ5B,SAM8B,YAA3BC,EAAgBD,OAAuB,SAAW,0B,+IC7K7D,IAuBM4D,EAAYzE,YAAOhB,IAAPgB,CAAH,KAOA0E,EA9BH,WACV,OACE,qCACE,cAAC1F,EAAA,EAAD,CAAKE,GAAI,EAAT,SACE,cAAC,EAAD,MAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyF,OAAK,EAACC,KAAK,QAAlB,SACE,cAACH,EAAD,CAAWtG,UAAW,EAAtB,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAOwG,OAAK,EAACC,KAAK,UAAlB,SACE,cAACH,EAAD,CAAWtG,UAAW,EAAtB,SACE,cAAC,EAAD,QAGJ,cAAC,IAAD,CAAU0G,KAAK,KAAKC,GAAG,iBCXhBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAQC,SAAS,WAAjB,SACE,cAAC,EAAD,QAGJ5C,SAAS6C,eAAe,SAM1Bb,M","file":"static/js/main.f0915ffd.chunk.js","sourcesContent":["import React from 'react';\nimport { AppBar as MuiAppBar } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = makeStyles((theme: any) => ({\n  title: {\n    fontSize: 24,\n  },\n  header: {\n    padding: '1rem 2rem',\n  },\n  left: {\n    flex: 1,\n  },\n  leftLinkActive: {\n    color: theme.palette.common.white,\n  },\n}));\n\nconst AppAppBar = () => {\n  const classes = styles();\n\n  return (\n    <MuiAppBar elevation={0} position=\"static\" className={classes.header}>\n      <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n        Bitcoin keys generation\n      </Typography>\n    </MuiAppBar>\n  );\n};\n\nexport default AppAppBar;\n","import { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nexport default withStyles((theme) => ({\n  root: {\n    borderRadius: 0,\n    fontWeight: theme.typography.fontWeightMedium,\n    padding: theme.spacing(2, 4),\n    fontSize: theme.typography.pxToRem(14),\n    boxShadow: 'none',\n    '&:active, &:focus': {\n      boxShadow: 'none',\n    },\n  },\n  sizeSmall: {\n    padding: theme.spacing(1, 3),\n    fontSize: theme.typography.pxToRem(13),\n  },\n  sizeLarge: {\n    padding: theme.spacing(2, 5),\n    fontSize: theme.typography.pxToRem(16),\n  },\n}))(Button);\n","import { Box, TextField, Typography } from '@material-ui/core';\nimport { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useHistory } from 'react-router-dom';\n\nconst styles = makeStyles(() => ({\n  input: {\n    width: '60%',\n    marginBottom: '1rem',\n  },\n}));\n\nimport Button from './Button';\n\nconst Form = () => {\n  const classes = styles();\n\n  const [secretWord, setSecretWord] = useState('');\n\n  const history = useHistory();\n  return (\n    <Box>\n      <Typography align=\"center\" variant=\"h4\">\n        Enter secret word\n      </Typography>\n      <Box mb={2}>\n        <Typography align=\"center\" variant=\"h5\">\n          to generate bitcoin keys{' '}\n        </Typography>\n      </Box>\n      <Box mb={2} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\n        <TextField\n          label=\"Secret\"\n          variant=\"outlined\"\n          value={secretWord}\n          className={classes.input}\n          onChange={({ target: { value } }) => setSecretWord(value)}\n        />\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          disabled={!secretWord}\n          onClick={() => history.push('/wallet', { secretWord })}\n        >\n          Proceed to wallet\n        </Button>\n      </Box>\n    </Box>\n  );\n};\n\nexport default Form;\n","/* eslint-disabl */\nimport React, { useState, useEffect } from 'react';\nimport * as bitcoin from 'bitcoinjs-lib';\nimport QRCode from 'qrcode';\nimport { Box, Typography, Snackbar } from '@material-ui/core';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport bip38 from 'bip38';\nimport wif from 'wif';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport Button from './Button';\n\ninterface ILocationState {\n  secretWord?: string;\n}\n\ninterface IKey {\n  key: string;\n  qr: string;\n}\n\ninterface IAddress {\n  address: string;\n  qr: string;\n}\n\ninterface ISnackbarOptions {\n  visible: boolean;\n  status: 'success' | 'error';\n}\n\nconst qrImageSample = 'https://anton.shevchuk.name/wp-content/uploads/2008/08/qrcode.png';\n\nconst Info: React.FunctionComponent = () => {\n  const [keyPair, setKeyPair] = useState<bitcoin.ECPairInterface | null>(null);\n  const [privateKey, setPrivateKey] = useState<IKey | null>(null);\n  const [legacyAddress, setLegacyAddress] = useState<IAddress | null>(null);\n  const [segwitAddress, setSegwitAddress] = useState<IAddress | null>(null);\n  const [snackbarOptions, setSnackbarOptions] = useState<ISnackbarOptions>({ visible: false, status: 'success' });\n\n  const location = useLocation<ILocationState>();\n  const history = useHistory();\n\n  const secretWord = location.state.secretWord;\n\n  if (!secretWord) {\n    history.replace('/form');\n    return null;\n  }\n\n  useEffect(() => {\n    setKeyPair(bitcoin.ECPair.makeRandom());\n  }, []);\n\n  useEffect(() => {\n    if (!keyPair) return;\n\n    const generateWalletInfo = async () => {\n      const decoded = wif.decode(keyPair.toWIF());\n      const encryptedKey = bip38.encrypt(decoded.privateKey, decoded.compressed, secretWord);\n\n      setPrivateKey({\n        key: encryptedKey,\n        qr: await QRCode.toDataURL(keyPair.toWIF()),\n      });\n\n      const P2PKHAddress: any = bitcoin.payments.p2pkh({\n        pubkey: keyPair.publicKey,\n      });\n      const P2WPKHAddress: any = bitcoin.payments.p2wpkh({\n        pubkey: keyPair.publicKey,\n      });\n\n      setLegacyAddress({\n        address: P2PKHAddress.address,\n        qr: await QRCode.toDataURL(P2PKHAddress.address),\n      });\n\n      setSegwitAddress({\n        address: P2WPKHAddress.address,\n        qr: await QRCode.toDataURL(P2WPKHAddress.address),\n      });\n    };\n\n    generateWalletInfo();\n  }, [keyPair]);\n\n  const fallbackCopyTextToClipboard = (text: string) => {\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n\n    // Avoid scrolling to bottom\n    textArea.style.top = '0';\n    textArea.style.left = '0';\n    textArea.style.position = 'fixed';\n\n    document.body.appendChild(textArea);\n    textArea.focus();\n    textArea.select();\n\n    document.body.removeChild(textArea);\n  };\n\n  const copyTextToClipboard = async (text: string) => {\n    if (!navigator.clipboard) {\n      fallbackCopyTextToClipboard(text);\n      return;\n    }\n\n    try {\n      await navigator.clipboard.writeText(text);\n      setSnackbarOptions({ visible: true, status: 'success' });\n    } catch (e) {\n      setSnackbarOptions({ visible: true, status: 'error' });\n    }\n  };\n\n  const handleCopyQrKey = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const key: string | undefined = e.currentTarget.dataset.key;\n    if (!key) return;\n    copyTextToClipboard(key);\n  };\n\n  return (\n    <Box position=\"relative\">\n      <Typography align=\"center\" variant=\"h4\">\n        Successfully generated bitcoin payment address keys\n      </Typography>\n      <Box pt={2} display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\n        <Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\">\n          <Typography>Your Private bitcoin key:</Typography>\n          <StyledImage isLoading={!privateKey?.qr} src={privateKey?.qr ? privateKey.qr : qrImageSample} />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            data-key={privateKey?.key}\n            disabled={!privateKey?.qr}\n            onClick={handleCopyQrKey}\n          >\n            Copy\n          </Button>\n        </Box>\n        <Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\">\n          <Typography>Your legacy address key:</Typography>\n          <StyledImage isLoading={!legacyAddress?.qr} src={legacyAddress?.qr ? legacyAddress.qr : qrImageSample} />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            data-key={legacyAddress?.address}\n            disabled={!privateKey?.qr}\n            onClick={handleCopyQrKey}\n          >\n            Copy\n          </Button>\n        </Box>\n        <Box display=\"flex\" alignItems=\"center\" flexDirection=\"column\">\n          <Typography>Your segwit address:</Typography>\n          <StyledImage isLoading={!segwitAddress?.qr} src={segwitAddress?.qr ? segwitAddress.qr : qrImageSample} />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            data-key={segwitAddress?.address}\n            disabled={!privateKey?.qr}\n            onClick={handleCopyQrKey}\n          >\n            Copy\n          </Button>\n        </Box>\n      </Box>\n      <Snackbar\n        open={snackbarOptions.visible}\n        autoHideDuration={2000}\n        onClose={() => setSnackbarOptions({ visible: false, status: snackbarOptions.status })}\n      >\n        <MuiAlert\n          elevation={6}\n          variant=\"filled\"\n          onClose={() => setSnackbarOptions({ visible: false, status: snackbarOptions.status })}\n          severity={snackbarOptions.status}\n        >\n          {snackbarOptions.status === 'success' ? 'Copied' : 'Failed to copy.'}\n        </MuiAlert>\n      </Snackbar>\n    </Box>\n  );\n};\n\ninterface IImageProps {\n  readonly isLoading: boolean;\n}\n\nconst StyledImage = styled.img<IImageProps>`\n  width: 200px;\n  height: 200px;\n  transition: all 0.2s;\n  filter: blur(${({ isLoading }) => (isLoading ? 0.5 : 0)});\n`;\n\nexport default Info;\n","import { Switch, Route, Redirect } from 'react-router-dom';\nimport AppBar from './AppBar';\nimport styled from 'styled-components';\n\nimport Form from './Form';\nimport Info from './Info';\nimport { Box } from '@material-ui/core';\n\nconst App = () => {\n  return (\n    <>\n      <Box mb={4}>\n        <AppBar />\n      </Box>\n      <Switch>\n        <Route exact path=\"/form\">\n          <Container boxShadow={2}>\n            <Form />\n          </Container>\n        </Route>\n        <Route exact path=\"/wallet\">\n          <Container boxShadow={2}>\n            <Info />\n          </Container>\n        </Route>\n        <Redirect from=\"/*\" to=\"/form\" />\n      </Switch>\n    </>\n  );\n};\n\nconst Container = styled(Box)`\n  width: 80%;\n  min-width: 600px;\n  margin: 0 auto;\n  padding: 2em;\n`;\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'normalize.css';\n\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router basename=\"/bitcoin\">\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}